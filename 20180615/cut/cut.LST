C51 COMPILER V7.50   CUT                                                                   06/15/2018 18:15:38 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE CUT
OBJECT MODULE PLACED IN cut.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE cut.C BROWSE DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /***********************************************  
   2              ROT_LCD.C   2018/05/18
   3          
   4              16X2 LCD, P00=RS ,P01=EN ,P04~P07=DATA_BUS   
   5              ROTARY, P36, P37, P32 
   6              MPC82G516 OK
   7          ************************************************/  
   8          #include "MAIN.H" 
   9          
  10          uchar code MSG[6][16] ={"A: HELP         ",  
  11                                  "B: TIME DISPLAY ",  
  12                                  "C: UP COUNTER   ",
  13                                  "D: DOWN COUNTER ",  
  14                                  "E: ADC0 HEX DISP",  
  15                                  "F: ADC0 Voltage "};
  16          
  17          uchar code MSGA[] = "C: TIME D: ADC0 ";  
  18          uchar code MSGB[] = "E: CNT  F: U/D  "; 
  19          uchar code MSGC[] = "TIME";
  20          uchar code MSGD[]={'2','0','1','8',0,' ','6',1,' ','8',2};
  21          uchar code MSGE[] = " MPC82G516 ADC0 ";
  22          
  23          uchar code FONT[] = {0x04,0x0F,0x12,0x0F,0x0A,0x1F,0x02,0x00,  //年
  24                               0x1F,0x11,0x1F,0x11,0x1F,0x11,0x11,0x00,  //月
  25                               0x1F,0x11,0x11,0x1F,0x11,0x11,0x1F,0x00}; //日
  26          uchar KEY_NO,K_TEMP;
  27          uchar OLD,MENUPTR,B_CNT,LCD_CNT;
  28          
  29          
  30          sbit COLUMN4  = P2^0;
  31          sbit COLUMN3  = P2^1;
  32          sbit COLUMN2  = P2^2;
  33          sbit COLUMN1  = P2^3;   
  34          sbit ROW4     = P2^4;
  35          sbit ROW3     = P2^5;
  36          sbit ROW2     = P2^6;
  37          sbit ROW1     = P2^7;
  38          
  39          uchar bdata  f; 
  40          sbit T_FLAG   = f^0;
  41          sbit T_ABLE   = f^1;
  42          
  43          uchar bdata  g; 
  44          sbit ADC_FLAG = g^0;
  45          sbit ADC_ABLE = g^1;
  46          sbit ADC_HEX  = g^2;
  47          
  48          uchar bdata  h; 
  49          sbit BE_FLAG  = h^0;
  50          
  51          
  52          
  53          
  54          uchar SECOND,HOUR,MIN,SEC,ONESEC;
  55          
C51 COMPILER V7.50   CUT                                                                   06/15/2018 18:15:38 PAGE 2   

  56          
  57          void ROTP_INT(void) interrupt 0 using 1
  58          {
  59   1         uchar i;
  60   1         BEEP_PRO(); 
  61   1         switch (MENUPTR) {
  62   2            case 0:
  63   2               HELP();
  64   2               break;
  65   2            case 1:
  66   2               LCD_Cmd(0x01); Delay(5000);  
  67   2               LCD_Cmd(0x0C); LCD_Cmd(0x86);
  68   2               for (i=0; i<4; i++) Send_Data(MSGC[i]);  
  69   2               LCD_Cmd(0xC4);     
  70   2               TIME_DISP(); T_ABLE=1;           
  71   2               break;
  72   2            case 2:      
  73   2               break;
  74   2            case 3:
  75   2               break;
  76   2            case 4:
  77   2               LCD_Cmd(1); Delay(5000); LCD_Cmd(0x0C);
  78   2               for (i=0; i<16; i++) Send_Data(MSGE[i]);
  79   2               f=0; g=0; ADC_ABLE=1; ADC_FLAG=1;   ADC_HEX=1;            
  80   2               break;
  81   2            case 5:
  82   2               break;
  83   2            default:
  84   2               break;
  85   2         }
  86   1         while (ROTP==0);
  87   1      }
  88          
  89          void T0_INT(void) interrupt 1 using 2 
  90          {
  91   1         if (BE_FLAG==1) {
  92   2            B_CNT--;
  93   2            if (B_CNT==0) {BE_FLAG=0; TR0=0; BEEP=1;}
  94   2         }
  95   1      }
  96          
  97          void KEY_INT(void) interrupt 2 using 1
  98          {
  99   1         uchar COD_TMP;
 100   1         SCAN_ON();
 101   1         if (K_TEMP==0xFF) {P2=0xF0; return;}
 102   1         COD_TMP=K_TEMP;
 103   1         Delay(5000);
 104   1         SCAN_ON();
 105   1         if (K_TEMP==0xFF) {P2=0xF0; return;}
 106   1         if (COD_TMP!=K_TEMP) {KEY_NO=0xFF; P2=0xF0; return;}
 107   1         SCAN_OFF();
 108   1         KEY_PRO();
 109   1      }
 110          
 111          void T2_INT(void) interrupt 5 using 3
 112          {
 113   1         TF2=0;
 114   1         SECOND--;
 115   1         if (SECOND>0) return;
 116   1         SECOND=10;  
 117   1         if (ADC_ABLE==1) ADC_FLAG=1;      // 0.1 sec 
C51 COMPILER V7.50   CUT                                                                   06/15/2018 18:15:38 PAGE 3   

 118   1         ONESEC--;
 119   1         if (ONESEC>0) return;
 120   1         ONESEC=10; TIME_INC();         
 121   1         if (T_ABLE==1) T_FLAG=1;       // 1 sec 
 122   1      } 
 123          
 124          void MAIN(void)
 125          {
 126   1         uchar j,k;
 127   1         EN=0; f=0; g=0; h=0;    
 128   1         TMOD=2; TH0=0; TL0=0;
 129   1         SECOND=10; // SECOND=100, 1秒
 130   1         ONESEC=10;
 131   1         T2CON=0;   // T2 16 BIT Timer 
 132   1                    // Fosc=22.1184MHz，Timer時脈=Fosc/12=1.8432MHz
 133   1                    // Timer延時時間=(1/1.8432MHz)*18432=10000uS=10ms  
 134   1         TH2=(65536-18432)>>8; TL2=(65536-18432); TR2=1; // 10ms 
 135   1         RCAP2H=(65536-18432)>>8; RCAP2L=(65536-18432); 
 136   1      
 137   1         Init_LCD(); 
 138   1         j=ROTA; k=ROTB; OLD=k*2+j; 
 139   1         MENUPTR=0; MENU_DISP();
 140   1         HOUR=0; MIN=0; SEC=0;
 141   1         P2=0xF0;
 142   1         EX0=1; IT0=1;      // ROTARY PUSH BUTTON
 143   1         EX1=1;
 144   1         ET0=1; PT0=1;  
 145   1         ET2=1; PT2=1;
 146   1         EA=1;
 147   1         while (1) {
 148   2            ROT_SCAN(10);
 149   2            if (T_FLAG==1) {TIME_DISP(); T_FLAG=0;}
 150   2            else if (ADC_FLAG==1) {
 151   3               if (ADC_HEX==1) {
 152   4                  V_ADC0(); LCD_Cmd(0xC6); ADC_HEX_DISPLAY(); ADC_FLAG=0;
 153   4               }
 154   3            }
 155   2         }
 156   1      }
 157          
 158          void BEEP_PRO(void)
 159          {
 160   1         B_CNT=0; BE_FLAG=1; 
 161   1         BEEP=0; TR0=1;
 162   1      }
 163          
 164          void MENU_DISP(void)
 165          {
 166   1         uchar i;
 167   1         f=0; g=0;
 168   1         LCD_Cmd(0x80); 
 169   1         for (i=0; i<16; i++) Send_Data(MSG[MENUPTR%6][i]); 
 170   1         LCD_Cmd(0xC0); 
 171   1         for (i=0; i<16; i++) Send_Data(MSG[(MENUPTR+1)%6][i]); 
 172   1      }
 173          
 174          void HELP(void)
 175          {
 176   1         uchar i;
 177   1         f=0; g=0;
 178   1         LCD_Cmd(1); Delay(5000);
 179   1         LCD_Cmd(0x0C); LCD_Cmd(0x80);            
C51 COMPILER V7.50   CUT                                                                   06/15/2018 18:15:38 PAGE 4   

 180   1         for (i=0; i<16; i++) Send_Data(MSGA[i]);    
 181   1         LCD_Cmd(0xC0);                
 182   1         for (i=0; i<16; i++) Send_Data(MSGB[i]);  
 183   1      }
 184          
 185          void TIME_INC(void)
 186          {
 187   1         SEC+=1; 
 188   1         if (SEC < 60) return; 
 189   1         SEC=0; MIN+=1;
 190   1         if (MIN < 60) return;
 191   1         MIN=0; HOUR+=1;
 192   1         if (HOUR < 24) return;
 193   1         HOUR=0;  
 194   1      }
 195          
 196          void TIME_DISP(void)
 197          {
 198   1         uchar i,j;
 199   1         LCD_Cmd(0xC4); LCD_Cmd(0x0C);
 200   1      
 201   1         j=HOUR; i=j/10; 
 202   1         if (i==0) i=0x20;
 203   1         else i+=0x30;
 204   1         Send_Data(i);
 205   1         j%=10; j+=0x30;
 206   1         Send_Data(j); Send_Data(':');
 207   1      
 208   1         j=MIN; i=j/10; 
 209   1         if (i==0) i=0x20;
 210   1         else i+=0x30;
 211   1         Send_Data(i);
 212   1         j%=10; j+=0x30;
 213   1         Send_Data(j); Send_Data(':');
 214   1      
 215   1         j=SEC; i=j/10; 
 216   1         if (i==0) i=0x20;
 217   1         else i+=0x30;
 218   1         Send_Data(i);
 219   1         j%=10; j+=0x30;
 220   1         Send_Data(j);
 221   1      }
 222          
 223          void KEY_PRO(void)
 224          {
 225   1         uchar i;
 226   1         P2=0x0F0;
 227   1         switch (KEY_NO)
 228   1         {
 229   2            case 0x0A: 
 230   2      
 231   2               break;   
 232   2            case 0x0B: 
 233   2      
 234   2               break;
 235   2            case 0x0C: 
 236   2               BEEP_PRO();
 237   2               LCD_Cmd(0x01); Delay(5000);  
 238   2               LCD_Cmd(0x0C); LCD_Cmd(0x86);
 239   2               for (i=0; i<4; i++) Send_Data(MSGC[i]);  
 240   2               LCD_Cmd(0xC4);     
 241   2               TIME_DISP(); T_ABLE=1;
C51 COMPILER V7.50   CUT                                                                   06/15/2018 18:15:38 PAGE 5   

 242   2               break;                   
 243   2            case 0x0D: 
 244   2      
 245   2               break;
 246   2            case 0x0E: 
 247   2      
 248   2               break;
 249   2            case 0x0F: 
 250   2      
 251   2               break;
 252   2            default:
 253   2               break;                  
 254   2         }
 255   1      }
 256          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    880    ----
   CONSTANT SIZE    =    187    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
