C51 COMPILER V7.50   ADC                                                                   06/28/2018 21:43:43 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN ADC.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ADC.c BROWSE DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /*******************************************
   2                9A417018
   3          *******************************************/
   4          
   5          #include "MAIN.H" 
   6          
   7          uint ADC16;
   8          
   9          void Init_ADC(void)
  10          {
  11   1         P1M0=0x21;  P1M1=0;  // P1.0, P1.5 Input Only
  12   1         AUXR=0x00;           // Low Speed, ADRJ=0  
  13   1      }
  14          
  15          void V_ADC0(void)
  16          {  
  17   1         float temp ;
  18   1      
  19   1         ADCTL = ADCON + ADCS;    // ADC CH0 Start Convert 
  20   1         while (!(ADCTL & ADCI));  // Wait ADC Complete
  21   1         ADCTL = 0;                // ADC Convert OK, Stop ADC
  22   1         ADC16 = (ADCH<<2) + ADCL;
  23   1      
  24   1         ADCTL = ADCON + ADCS;    // ADC CH0 Start Convert 
  25   1         while (!(ADCTL & ADCI));  // Wait ADC Complete
  26   1         ADCTL = 0;                // ADC Convert OK, Stop ADC
  27   1         temp = ADC16 + (ADCH<<2) + ADCL;
  28   1      
  29   1         ADC16 = temp; ADC16>>=1;
  30   1      }
  31          
  32          void V_ADC5(void)
  33          {  
  34   1         float temp ;
  35   1      
  36   1         ADCTL = ADCON + ADCS + 5; // ADC CH5 Start Convert 
  37   1         while (!(ADCTL & ADCI));  // Wait ADC Complete
  38   1         ADCTL = 0;                // ADC Convert OK, Stop ADC
  39   1         ADC16 = (ADCH<<2) + ADCL;
  40   1      
  41   1         ADCTL = ADCON + ADCS + 5; // ADC CH5 Start Convert 
  42   1         while (!(ADCTL & ADCI));  // Wait ADC Complete
  43   1         ADCTL = 0;                // ADC Convert OK, Stop ADC
  44   1         temp = ADC16 + (ADCH<<2) + ADCL;
  45   1      
  46   1         ADC16 = temp; ADC16>>=1;
  47   1      }
  48          
  49          void ADC_HEX_DISPLAY(void)    
  50          {
  51   1         uchar i;
  52   1         uint HEX;
  53   1      
  54   1         HEX=ADC16;
  55   1         i=HEX>>8;
C51 COMPILER V7.50   ADC                                                                   06/28/2018 21:43:43 PAGE 2   

  56   1         if (i>=0x0A) i+=7;
  57   1         i+=0x30; Send_Data(i);
  58   1      
  59   1         i=(HEX>>4)&0x0F;
  60   1         if (i>=0x0A) i+=7;
  61   1         i+=0x30; Send_Data(i);
  62   1         i=HEX&0x0F;
  63   1         if (i>=0x0A) i+=7;
  64   1         i+=0x30; Send_Data(i);  
  65   1         Send_Data(' ');
  66   1      }
  67          
  68          void ADC_DEC_DISPLAY(void)
  69          {
  70   1         uchar i;
  71   1         uint HEX;
  72   1      
  73   1         HEX=ADC16;
  74   1      
  75   1         HEX_to_DEC( HEX>>8 , (HEX>>4)&0x0F , HEX&0x0F);
  76   1         
  77   1         Send_Data(' ');
  78   1      
  79   1      }
*** WARNING C280 IN LINE 70 OF ADC.C: 'i': unreferenced local variable
  80          
  81          void ADC_BIN_DISPLAY(void)
  82          {
  83   1         uchar i;
  84   1         uint HEX;
  85   1      
  86   1         HEX=ADC16;
  87   1         i=HEX>>8;
  88   1         HEX_to_BIN(i);
  89   1      
  90   1         i=(HEX>>4)&0x0F;
  91   1         HEX_to_BIN(i);
  92   1      
  93   1         i=HEX&0x0F;
  94   1         HEX_to_BIN(i);
  95   1         
  96   1         LCD_Cmd(0xC0);
  97   1         Send_Data(' ');
  98   1         Send_Data(' ');
  99   1      }
 100          
 101          void HEX_to_BIN(uint num)
 102          {
 103   1         uint i;
 104   1         switch(num)
 105   1         {
 106   2            case 0:
 107   2               Send_Data('0');
 108   2               Send_Data('0');
 109   2               Send_Data('0');
 110   2               Send_Data('0');
 111   2            break;
 112   2            case 1:
 113   2               Send_Data('0');
 114   2               Send_Data('0');
 115   2               Send_Data('0');
 116   2               Send_Data('1');
C51 COMPILER V7.50   ADC                                                                   06/28/2018 21:43:43 PAGE 3   

 117   2            break;
 118   2            case 2:
 119   2               Send_Data('0');
 120   2               Send_Data('0');
 121   2               Send_Data('1');
 122   2               Send_Data('0');
 123   2            break;
 124   2            case 3:
 125   2               Send_Data('0');
 126   2               Send_Data('0');
 127   2               Send_Data('1');
 128   2               Send_Data('1');
 129   2            break;
 130   2            case 4:
 131   2               Send_Data('0');
 132   2               Send_Data('1');
 133   2               Send_Data('0');
 134   2               Send_Data('0');
 135   2            break;
 136   2            case 5:
 137   2               Send_Data('0');
 138   2               Send_Data('1');
 139   2               Send_Data('0');
 140   2               Send_Data('1');
 141   2            break;
 142   2            case 6:
 143   2               Send_Data('0');
 144   2               Send_Data('1');
 145   2               Send_Data('1');
 146   2               Send_Data('0');
 147   2            break;
 148   2            case 7:
 149   2               Send_Data('0');
 150   2               Send_Data('1');
 151   2               Send_Data('1');
 152   2               Send_Data('1');
 153   2            break;
 154   2            case 8:
 155   2               Send_Data('1');
 156   2               Send_Data('0');
 157   2               Send_Data('0');
 158   2               Send_Data('0');
 159   2            break;
 160   2            case 9:
 161   2               Send_Data('1');
 162   2               Send_Data('0');
 163   2               Send_Data('0');
 164   2               Send_Data('1');
 165   2            break;
 166   2            case 10:
 167   2               Send_Data('1');
 168   2               Send_Data('0');
 169   2               Send_Data('1');
 170   2               Send_Data('0');
 171   2            break;
 172   2            case 11:
 173   2               Send_Data('1');
 174   2               Send_Data('0');
 175   2               Send_Data('1');
 176   2               Send_Data('1');
 177   2            break;
 178   2            case 12:
C51 COMPILER V7.50   ADC                                                                   06/28/2018 21:43:43 PAGE 4   

 179   2               Send_Data('1');
 180   2               Send_Data('1');
 181   2               Send_Data('0');
 182   2               Send_Data('0');
 183   2            break;
 184   2            case 13:
 185   2               Send_Data('1');
 186   2               Send_Data('1');
 187   2               Send_Data('0');
 188   2               Send_Data('1');
 189   2            break;
 190   2            case 14:
 191   2               Send_Data('1');
 192   2               Send_Data('1');
 193   2               Send_Data('1');
 194   2               Send_Data('0');
 195   2            break;
 196   2            case 15:
 197   2               Send_Data('1');
 198   2               Send_Data('1');
 199   2               Send_Data('1');
 200   2               Send_Data('1');
 201   2            break;
 202   2         }
 203   1      }
*** WARNING C280 IN LINE 103 OF ADC.C: 'i': unreferenced local variable
 204          
 205          void HEX_to_DEC(uint fir , uint sec , uint thi)
 206          {
 207   1         uchar len,i;
 208   1         uint k;
 209   1         uint v1 = fir * 16 * 16;
 210   1         uint v2 = sec * 16;
 211   1         uint v3 = thi;
 212   1         uint tal = v1 + v2 + v3;
 213   1         if(tal>999)
 214   1         {
 215   2            len = 4;
 216   2            for(i=0; i<len; i++)
 217   2            {
 218   3               k = tal / pow(10, len-i-1);
 219   3               k = k % 10;
 220   3               k = 0x30 + k;
 221   3               Send_Data(k);
 222   3            }
 223   2         }
 224   1         else if(tal>99)
 225   1         {
 226   2            Send_Data(' ');
 227   2            len = 3;
 228   2            for(i=0; i<len; i++)
 229   2            {
 230   3               k = tal / pow(10, len-i-1);
 231   3               k = k % 10;
 232   3               k = 0x30 + k;
 233   3               Send_Data(k);
 234   3            }
 235   2         }
 236   1         else if(tal>9)
 237   1         {
 238   2            Send_Data(' ');
 239   2            Send_Data(' ');
C51 COMPILER V7.50   ADC                                                                   06/28/2018 21:43:43 PAGE 5   

 240   2            len = 2;
 241   2            for(i=0; i<len; i++)
 242   2            {
 243   3               k = tal / pow(10, len-i-1);
 244   3               k = k % 10;
 245   3               k = 0x30 + k;
 246   3               Send_Data(k);
 247   3            }
 248   2         }
 249   1         else
 250   1         {
 251   2            Send_Data(' ');
 252   2            Send_Data(' ');
 253   2            Send_Data(' ');
 254   2            Send_Data('0' + tal );
 255   2         }
 256   1      }
 257          
 258          void HEX_to_VOL(uint fir , uint sec , uint thi,int sw)
 259          {
 260   1         uchar len,i;
 261   1         uint k;
 262   1         uint v1 = fir * 16 * 16;
 263   1         uint v2 = sec * 16;
 264   1         uint v3 = thi;
 265   1         long kk = v1 + v2 + v3;
 266   1         if(sw==4)
 267   1         {
 268   2            kk = kk * 5 * 10000;
 269   2            kk = kk / 1023;
 270   2            Send_Data('0' + kk/10000 );
 271   2            Send_Data('.');
 272   2            Send_Data('0' + (kk%10000)/1000 );
 273   2            Send_Data('0' + (kk%1000)/100 );
 274   2            Send_Data('0' + (kk%100)/10 );
 275   2            Send_Data('0' + kk%10 );
 276   2         }
 277   1         
 278   1         else if(sw==3)
 279   1         {
 280   2            k = k * 5 * 1000;
 281   2            k = k / 1023;
 282   2            Send_Data('0' + k/1000 );
 283   2            Send_Data('.');
 284   2            Send_Data('0' + (k%1000)/100 );
 285   2            Send_Data('0' + (k%100)/10 );
 286   2            Send_Data('0' + k%10 );
 287   2         }
 288   1         else if(sw==2)
 289   1         {
 290   2            k = k * 5 * 100;
 291   2            k = k / 1023;
 292   2            Send_Data('0' + k/100 );
 293   2            Send_Data('.');
 294   2            Send_Data('0' + (k%100)/10 );
 295   2            Send_Data('0' + k%10 );
 296   2         }
 297   1         else if(sw==1)
 298   1         {
 299   2            k = k * 5 * 10;
 300   2            k = k / 1023;
 301   2            Send_Data('0' + k/10 );
C51 COMPILER V7.50   ADC                                                                   06/28/2018 21:43:43 PAGE 6   

 302   2            Send_Data('.');
 303   2            Send_Data('0' + k%10 );
 304   2         }
 305   1      }
*** WARNING C280 IN LINE 260 OF ADC.C: 'len': unreferenced local variable
*** WARNING C280 IN LINE 260 OF ADC.C: 'i': unreferenced local variable
 306          
 307          void ADC_VOL_DISPLAY(int sw)
 308          {
 309   1         uint HEX;
 310   1         HEX=ADC16;
 311   1      
 312   1         HEX_to_VOL( HEX>>8 , (HEX>>4)&0x0F , HEX&0x0F ,sw);
 313   1         
 314   1      }
 315          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1647    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      35
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
