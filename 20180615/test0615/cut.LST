C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE CUT
OBJECT MODULE PLACED IN cut.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE cut.C BROWSE DEBUG OBJECTEXTEND TABS(3)

line level    source

   1          /***********************************************  
   2                techer's exp
   3          ************************************************/  
   4          #include "MAIN.H" 
   5          #include <math.h> 
   6          
   7          uchar code SPACE[] = "                ";
   8          uchar code STUDENT_ID[] = "9A417018";
   9          
  10          uchar code MSG[9][16] ={"A ADC5 Decimal  ",  
  11                                  "B ADC5 Binary   ",  
  12                                  "C ADC5 Voltage 4",
  13                                  "D ADC5 Voltage 3",  
  14                                  "E ADC5 Voltage 2",  
  15                                  "F ADC5 Voltage 1",
  16                                  "G ABCD CW Rotate",
  17                                  "H UP   Counter 4",                       
  18                                  "I DOWN Counter 4"};
  19          
  20          uchar code MSGA[] = "C: TIME D: ADC0 ";  
  21          uchar code MSGB[] = "E: CNT  F: U/D  "; 
  22          
  23          uchar code MSGC[] = "TIME";
  24          uchar code MSGD[]={'2','0','1','8',0,' ','6',1,' ','8',2};
  25          
  26          uchar code MSGE[] = " MPC82G516 ADC0 ";
  27          
  28          uchar code FONT[] = {0x04,0x0F,0x12,0x0F,0x0A,0x1F,0x02,0x00,  //年
  29                               0x1F,0x11,0x1F,0x11,0x1F,0x11,0x11,0x00,  //月
  30                               0x1F,0x11,0x11,0x1F,0x11,0x11,0x1F,0x00}; //日
  31          uchar KEY_NO,K_TEMP;
  32          uchar OLD,MENUPTR,B_CNT,LCD_CNT;
  33          
  34          
  35          sbit  COLUMN4  = P2^0;
  36          sbit  COLUMN3  = P2^1;
  37          sbit  COLUMN2  = P2^2;
  38          sbit  COLUMN1  = P2^3;  
  39          sbit  ROW4     = P2^4;
  40          sbit  ROW3     = P2^5;
  41          sbit  ROW2     = P2^6;
  42          sbit  ROW1     = P2^7;
  43          
  44          uchar bdata  f; 
  45          sbit  T_FLAG      = f^0;
  46          sbit  T_ABLE      = f^1;
  47          sbit  Stu_FLAG    = f^2;
  48          
  49          uchar bdata  g; 
  50          sbit  ADC_FLAG = g^0;
  51          sbit  ADC_ABLE = g^1;
  52          //sbit   ADC_HEX  = g^2;
  53          sbit  ADC_DEC  = g^2;
  54          sbit  ADC_BIN  = g^3;
  55          sbit  ADC_VOL1 = g^4;
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 2   

  56          sbit  ADC_VOL2 = g^5;
  57          sbit  ADC_VOL3 = g^6;
  58          sbit  ADC_VOL4 = g^7;
  59          
  60          uchar bdata  h; 
  61          sbit  BE_FLAG  = h^0;
  62          
  63          uchar bdata  q;
  64          sbit  UP_FLAG     = q^0;
  65          sbit  UP_ABLE     = q^1;
  66          sbit  DOWN_FLAG   = q^2;
  67          sbit  DOWN_ABLE   = q^3;
  68          
  69          sbit  KUP_FLAG = q^4;
  70          sbit  KUP_ABLE = q^5;
  71          sbit  KDOWN_FLAG  = q^6;
  72          sbit  KDOWN_ABLE  = q^7;
  73          
  74          
  75          uchar SECOND,HOUR,MIN,SEC,ONESEC;
  76          
  77          uint RotCount = 0;
  78          uint KeyCount = 0;
  79          uint KeySwitch = 0;
  80          
  81          void ROTP_INT(void) interrupt 0 using 1 //旋轉變碼器 按下
  82          {
  83   1         uchar i;
  84   1         BEEP_PRO();
  85   1         f=0;g=0;q=0;
  86   1         switch (MENUPTR) {
  87   2            case 0:
  88   2               LCD_Cmd(1); Delay(5000); LCD_Cmd(0x0C);
  89   2               for (i=0; i<16; i++) Send_Data(MSGE[i]);
  90   2               ADC_ABLE=1;ADC_DEC=1;
  91   2               break;
  92   2            case 1:
  93   2               LCD_Cmd(1); Delay(5000); LCD_Cmd(0x0C);
  94   2               for (i=0; i<16; i++) Send_Data(MSGE[i]);
  95   2               ADC_ABLE=1;ADC_BIN=1;
  96   2               break;
  97   2            case 2:
  98   2               LCD_Cmd(1); Delay(5000); LCD_Cmd(0x0C);
  99   2               for (i=0; i<16; i++) Send_Data(MSGE[i]);
 100   2               ADC_ABLE=1;ADC_VOL4=1;
 101   2               break;
 102   2            case 3:
 103   2               LCD_Cmd(1); Delay(5000); LCD_Cmd(0x0C);
 104   2               for (i=0; i<16; i++) Send_Data(MSGE[i]);
 105   2               ADC_ABLE=1;ADC_VOL3=1;
 106   2               break;
 107   2            case 4:
 108   2               LCD_Cmd(1); Delay(5000); LCD_Cmd(0x0C);
 109   2               for (i=0; i<16; i++) Send_Data(MSGE[i]);
 110   2               ADC_ABLE=1;ADC_VOL2=1;
 111   2               break;
 112   2            case 5:
 113   2               LCD_Cmd(1); Delay(5000); LCD_Cmd(0x0C);
 114   2               for (i=0; i<16; i++) Send_Data(MSGE[i]);
 115   2               ADC_ABLE=1;ADC_VOL1=1;
 116   2               break;
 117   2            case 6:
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 3   

 118   2      /*---------------------------------------------------------------------------------------------*/
 119   2               break;
 120   2            case 7:
 121   2               LCD_Cmd(0x01); Delay(5000);  
 122   2               LCD_Cmd(0x0C);
 123   2               UP_ABLE = 1;
 124   2               break;
 125   2            case 8:
 126   2               LCD_Cmd(0x01); Delay(5000);  
 127   2               LCD_Cmd(0x0C);
 128   2               DOWN_ABLE = 1;
 129   2               break;
 130   2            default:
 131   2               break;
 132   2         }
 133   1         while (ROTP==0);
 134   1      }
 135          
 136          void T0_INT(void) interrupt 1 using 2 
 137          {
 138   1         if (BE_FLAG==1) {
 139   2            B_CNT--;
 140   2            if (B_CNT==0) {BE_FLAG=0; TR0=0; BEEP=1;}
 141   2         }
 142   1      }
 143          
 144          void KEY_INT(void) interrupt 2 using 1
 145          {
 146   1         uchar COD_TMP;
 147   1         SCAN_ON();
 148   1         if (K_TEMP==0xFF) {P2=0xF0; return;}
 149   1         COD_TMP=K_TEMP;
 150   1         Delay(5000);
 151   1         SCAN_ON();
 152   1         if (K_TEMP==0xFF) {P2=0xF0; return;}
 153   1         if (COD_TMP!=K_TEMP) {KEY_NO=0xFF; P2=0xF0; return;}
 154   1         SCAN_OFF();
 155   1         KEY_PRO();
 156   1      }
 157          
 158          void T2_INT(void) interrupt 5 using 3
 159          {
 160   1         TF2=0;
 161   1         SECOND--;
 162   1         if (SECOND>0) return;
 163   1         SECOND=10;  
 164   1      /*--------------------------------------------------------------------------------------------------------
             -------*/
 165   1         //利用計時器定時判斷ABLE  若成立更改FLAG  (0.1 sec)
 166   1         if(UP_ABLE == 1) 
 167   1         {
 168   2            UP_FLAG =1;
 169   2            UP_COUNTER(&RotCount,0,9999);
*** WARNING C182 IN LINE 169 OF CUT.C: pointer to different objects
 170   2         }
 171   1         else if(DOWN_ABLE == 1) 
 172   1         {
 173   2            DOWN_FLAG =1;
 174   2            DOWN_COUNTER(&RotCount,9999,0);
*** WARNING C182 IN LINE 174 OF CUT.C: pointer to different objects
 175   2         }
 176   1         else if(KUP_ABLE == 1) 
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 4   

 177   1         {
 178   2            KUP_FLAG =1;
 179   2            UP_COUNTER(&KeyCount,0,123);
*** WARNING C182 IN LINE 179 OF CUT.C: pointer to different objects
 180   2         }
 181   1         else if(KDOWN_ABLE == 1) 
 182   1         {
 183   2            KDOWN_FLAG =1;
 184   2            DOWN_COUNTER(&KeyCount,123,0);
*** WARNING C182 IN LINE 184 OF CUT.C: pointer to different objects
 185   2         }
 186   1         else if (ADC_ABLE==1)
 187   1         {
 188   2            ADC_FLAG=1;
 189   2         }
 190   1      /*--------------------------------------------------------------------------------------------------------
             -------*/
 191   1         //利用計時器定時判斷ABLE  若成立更改FLAG  (1 sec)
 192   1         ONESEC--;
 193   1         if (ONESEC>0) return;
 194   1         ONESEC=10; TIME_INC();         
 195   1         if (T_ABLE==1) T_FLAG=1;
 196   1      } 
 197          
 198          void MAIN(void)
 199          {
 200   1         uchar i,j,k;
 201   1         EN=0; f=0; g=0; h=0;    
 202   1         TMOD=2; TH0=0; TL0=0;
 203   1         SECOND=10; // SECOND=100, 1秒
 204   1         ONESEC=10;
 205   1         T2CON=0;   // T2 16 BIT Timer 
 206   1                    // Fosc=22.1184MHz，Timer時脈=Fosc/12=1.8432MHz
 207   1                    // Timer延時時間=(1/1.8432MHz)*18432=10000uS=10ms  
 208   1         TH2=(65536-18432)>>8; TL2=(65536-18432); TR2=1; // 10ms 
 209   1         RCAP2H=(65536-18432)>>8; RCAP2L=(65536-18432); 
 210   1      
 211   1         Init_LCD(); 
 212   1         j=ROTA; k=ROTB; OLD=k*2+j; 
 213   1         MENUPTR=0; MENU_DISP();
 214   1         HOUR=0; MIN=0; SEC=0;
 215   1         P2=0xF0;
 216   1         EX0=1; IT0=1;      // ROTARY PUSH BUTTON
 217   1         EX1=1;
 218   1         ET0=1; PT0=1;  
 219   1         ET2=1; PT2=1;
 220   1         EA=1;
 221   1         while (1) {
 222   2            ROT_SCAN(10);
 223   2      /*--------------------------------------------------------------------------------------------------------
             -------*/
 224   2            //利用FLAG判斷做什麼事 
 225   2            if(UP_FLAG==1)
 226   2            {
 227   3               COUNTER_DISP(4,RotCount);
 228   3               UP_FLAG=0;
 229   3            }
 230   2            else if(DOWN_FLAG==1)
 231   2            {
 232   3               COUNTER_DISP(4,RotCount);
 233   3               DOWN_FLAG=0;
 234   3            }
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 5   

 235   2            else if(KUP_FLAG==1)
 236   2            {
 237   3               COUNTER_DISP(3,KeyCount);
 238   3               KUP_FLAG=0;
 239   3            }
 240   2            else if(KDOWN_FLAG==1)
 241   2            {
 242   3               COUNTER_DISP(3,KeyCount);
 243   3               KDOWN_FLAG=0;
 244   3            }
 245   2            else if(ADC_FLAG==1)
 246   2            {
 247   3               /*
 248   3               if (ADC_HEX==1)
 249   3               {
 250   3                  V_ADC0(); LCD_Cmd(0xC6); ADC_HEX_DISPLAY(); ADC_FLAG=0;
 251   3               }
 252   3               */
 253   3               if(ADC_DEC==1)
 254   3               {
 255   4                  /*
 256   4                  V_ADC0();
 257   4                  */
 258   4                  V_ADC5();
 259   4                  LCD_Cmd(0xC0);
 260   4                  ADC_DEC_DISPLAY();
 261   4                  ADC_FLAG=0;
 262   4               }
 263   3               else if(ADC_BIN==1)
 264   3               {
 265   4                  /*
 266   4                  V_ADC0();
 267   4                  */
 268   4                  V_ADC5();
 269   4                  LCD_Cmd(0xC0);
 270   4                  ADC_BIN_DISPLAY();
 271   4                  ADC_FLAG=0;
 272   4               }
 273   3               else if(ADC_VOL4==1)
 274   3               {
 275   4                  /*
 276   4                  V_ADC0();
 277   4                  */
 278   4                  V_ADC5();
 279   4                  LCD_Cmd(0xC0);
 280   4                  ADC_VOL_DISPLAY(4);
 281   4                  ADC_FLAG=0;
 282   4               }
 283   3               else if(ADC_VOL3==1)
 284   3               {
 285   4                  /*
 286   4                  V_ADC0();
 287   4                  */
 288   4                  V_ADC5();
 289   4                  LCD_Cmd(0xC0);
 290   4                  ADC_VOL_DISPLAY(3);
 291   4                  ADC_FLAG=0;
 292   4               }
 293   3               else if(ADC_VOL2==1)
 294   3               {
 295   4                  /*
 296   4                  V_ADC0();
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 6   

 297   4                  */
 298   4                  V_ADC5();
 299   4                  LCD_Cmd(0xC0);
 300   4                  ADC_VOL_DISPLAY(2);
 301   4                  ADC_FLAG=0;
 302   4               }
 303   3               else if(ADC_VOL1==1)
 304   3               {
 305   4                  /*
 306   4                  V_ADC0();
 307   4                  */
 308   4                  V_ADC5();
 309   4                  LCD_Cmd(0xC0);
 310   4                  ADC_VOL_DISPLAY(1);
 311   4                  ADC_FLAG=0;
 312   4               }
 313   3            }
 314   2      /*--------------------------------------------------------------------------------------------------------
             -------*/
 315   2         }
 316   1      }
*** WARNING C280 IN LINE 200 OF CUT.C: 'i': unreferenced local variable
 317          
 318          void BEEP_PRO(void)
 319          {
 320   1         B_CNT=0; BE_FLAG=1; 
 321   1         BEEP=0; TR0=1;
 322   1      }
 323          
 324          void MENU_DISP(void)
 325          {
 326   1         uchar i;
 327   1         f=0; g=0;q=0;
 328   1         LCD_Cmd(0x80); 
 329   1         for (i=0; i<16; i++) Send_Data(MSG[MENUPTR%9][i]);
 330   1         LCD_Cmd(0xC0); 
 331   1         for (i=0; i<16; i++) Send_Data(MSG[(MENUPTR+1)%9][i]);
 332   1      }
 333          
 334          void HELP(void)
 335          {
 336   1         uchar i;
 337   1         f=0; g=0;
 338   1         LCD_Cmd(1); Delay(5000);
 339   1         LCD_Cmd(0x0C); LCD_Cmd(0x80);            
 340   1         for (i=0; i<16; i++) Send_Data(MSGA[i]);    
 341   1         LCD_Cmd(0xC0);                
 342   1         for (i=0; i<16; i++) Send_Data(MSGB[i]);  
 343   1      }
 344          
 345          void TIME_INC(void)
 346          {
 347   1         SEC+=1; 
 348   1         if (SEC < 60) return; 
 349   1         SEC=0; MIN+=1;
 350   1         if (MIN < 60) return;
 351   1         MIN=0; HOUR+=1;
 352   1         if (HOUR < 24) return;
 353   1         HOUR=0;  
 354   1      }
 355          
 356          
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 7   

 357          
 358          void KEY_PRO(void)
 359          {
 360   1         uchar i;
 361   1         P2=0x0F0;
 362   1         f=0;g=0;q=0;
 363   1         BEEP_PRO();
 364   1         switch (KEY_NO)
 365   1         {
 366   2            case 0x0A: 
 367   2      
 368   2               break;   
 369   2            case 0x0B: 
 370   2      
 371   2               break;
 372   2            case 0x0C:
 373   2               LCD_Cmd(0x01); Delay(5000);  
 374   2               LCD_Cmd(0x0C);
 375   2               if(KeySwitch==1)
 376   2               {
 377   3                  KUP_ABLE = 1;
 378   3               }
 379   2               else
 380   2               {
 381   3                  KDOWN_ABLE = 1;
 382   3               }
 383   2               break;
 384   2                         
 385   2            case 0x0D: 
 386   2               LCD_Cmd(0x01); Delay(5000);  
 387   2               LCD_Cmd(0x0C);
 388   2               if(KeySwitch==1)
 389   2               {
 390   3                  KeySwitch=0;
 391   3                  KDOWN_ABLE = 1;
 392   3               }
 393   2               else
 394   2               {
 395   3                  KeySwitch=1;
 396   3                  KUP_ABLE = 1;
 397   3               }
 398   2               break;
 399   2            case 0x0E: 
 400   2      
 401   2               break;
 402   2            case 0x0F: 
 403   2      
 404   2               break;
 405   2            default:
 406   2               break;                  
 407   2         }
 408   1      }
*** WARNING C280 IN LINE 360 OF CUT.C: 'i': unreferenced local variable
 409          
 410          
 411          void COUNTER_DISP(int len , int count)
 412          {
 413   1         int i;
 414   1         LCD_Cmd(0xC1);
 415   1         for(i=0; i<len; i++)
 416   1         {
 417   2            Send_Data(0x30 + (count / (int)pow(10, len-i-1))% 10);
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 8   

 418   2         }
 419   1      }
 420          
 421          void ID_Shift(void)
 422          {
 423   1         uchar i,j;
 424   1         LCD_Cmd(0x84);
 425   1         for (i=0; i<8; i++){
 426   2            ROT_SCAN(10);
 427   2            if(Stu_FLAG==0)return;
 428   2            Send_Data(STUDENT_ID[i]);
 429   2         }
 430   1         for(i=0;i<4;i++){
 431   2            ROT_SCAN(10);
 432   2            if(Stu_FLAG==0)return;
 433   2            LCD_Cmd(0xC0);
 434   2            for(j=i;j<4;j++){
 435   3               ROT_SCAN(10);
 436   3               if(Stu_FLAG==0)return;
 437   3               Send_Data(SPACE[j]);
 438   3            }
 439   2            for(j=0;j<8;j++){
 440   3               ROT_SCAN(10);
 441   3               if(Stu_FLAG==0)return;
 442   3               Send_Data(STUDENT_ID[j]);
 443   3            }
 444   2            for(j=0;j<i;j++){
 445   3               ROT_SCAN(10);
 446   3               if(Stu_FLAG==0)return;
 447   3               Send_Data(SPACE[j]);
 448   3            }
 449   2            ROT_SCAN(50000);
 450   2         }
 451   1         while(1){
 452   2            ROT_SCAN(10);
 453   2            if(Stu_FLAG==0)return;
 454   2            LCD_Cmd(0xC0);
 455   2            for(i=0;i<8;i++){
 456   3               ROT_SCAN(10);
 457   3               if(Stu_FLAG==0)return;
 458   3               LCD_Cmd(0xC0);
 459   3               for(j=0;j<i;j++){
 460   4                  ROT_SCAN(10);
 461   4                  if(Stu_FLAG==0)return;
 462   4                  Send_Data(SPACE[j]);
 463   4               }
 464   3               for(j=0;j<8;j++){
 465   4                  ROT_SCAN(10);
 466   4                  if(Stu_FLAG==0)return;
 467   4                  Send_Data(STUDENT_ID[j]);
 468   4               }
 469   3               for(j=i;j<8;j++){
 470   4                  ROT_SCAN(10);
 471   4                  if(Stu_FLAG==0)return;
 472   4                  Send_Data(SPACE[j]);
 473   4               }
 474   3               ROT_SCAN(50000);
 475   3               if(Stu_FLAG==0)return;
 476   3            }
 477   2            ROT_SCAN(10);
 478   2            LCD_Cmd(0xC0);
 479   2            for(i=0;i<16;i++){
C51 COMPILER V7.50   CUT                                                                   06/28/2018 21:43:43 PAGE 9   

 480   3               ROT_SCAN(10);
 481   3               if(Stu_FLAG==0)return;
 482   3               Send_Data(SPACE[i]);
 483   3            }
 484   2            for(i=0;i<8;i++){
 485   3               ROT_SCAN(10);
 486   3               if(Stu_FLAG==0)return;
 487   3               LCD_Cmd(0xC0);
 488   3               for(j=i;j<8;j++){
 489   4                  ROT_SCAN(10);
 490   4                  if(Stu_FLAG==0)return;
 491   4                  Send_Data(SPACE[j]);
 492   4               }
 493   3               for(j=0;j<8;j++){
 494   4                  ROT_SCAN(10);
 495   4                  if(Stu_FLAG==0)return;
 496   4                  Send_Data(STUDENT_ID[j]);
 497   4               }
 498   3               for(j=0;j<i;j++){
 499   4                  ROT_SCAN(10);
 500   4                  if(Stu_FLAG==0)return;
 501   4                  Send_Data(SPACE[j]);
 502   4               }
 503   3               ROT_SCAN(50000);
 504   3               if(Stu_FLAG==0)return;
 505   3            }
 506   2         }
 507   1      }
 508          
 509          
 510          
 511          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1918    ----
   CONSTANT SIZE    =    261    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
